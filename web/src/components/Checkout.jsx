// src/components/Checkout.jsx
import React, { useState, useEffect } from "react";
import { Link, useNavigate } from "react-router-dom";
import "./Checkout.css";

export default function Checkout({ cart, currentUser, setCart }) {
    const navigate = useNavigate();
    const total = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);

    const restaurantName = cart.length > 0 ? cart[0].restaurantName : "Ch∆∞a ch·ªçn nh√† h√†ng";
    const restaurantId = cart.length > 0 ? cart[0].restaurantId : null;

    const [form, setForm] = useState({
        lastName: "",
        firstName: "",
        phone: "",
        email: "",
        address: ""
    });

    useEffect(() => {
        if (currentUser) {
            const savedUser = JSON.parse(localStorage.getItem("currentUser")) || {};
            setForm({
                lastName: currentUser.lastname || savedUser.lastname || "",
                firstName: currentUser.firstname || savedUser.firstname || "",
                phone: currentUser.phonenumber || savedUser.phonenumber || "",
                email: currentUser.email || savedUser.email || "",
                address: currentUser.address || savedUser.address || "45 Nguy·ªÖn Tr√£i, Qu·∫≠n 5, TP.HCM"
            });
        }
    }, [currentUser]);

    const handleChange = (e) => {
        const { name, value } = e.target;
        setForm({ ...form, [name]: value });
    };

    // H√†m t·∫°o ID 4 ch·ªØ s·ªë, kh√¥ng tr√πng v·ªõi c√°c order hi·ªán t·∫°i
    const generateOrderId = async () => {
        const res = await fetch("http://localhost:5002/orders");
        const orders = await res.json();
        let id;
        do {
            id = Math.floor(1000 + Math.random() * 9000); // 4 ch·ªØ s·ªë ng·∫´u nhi√™n
        } while (orders.some(order => Number(order.id) === id));
        return id;
    };

    const handleCheckout = async () => {
        if (!currentUser) {
            alert("‚ö†Ô∏è B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ thanh to√°n!");
            navigate("/login");
            return;
        }

        if (cart.length === 0) {
            alert("üõí Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng!");
            navigate("/cart");
            return;
        }

        try {
            const newOrderId = await generateOrderId();
            const newOrder = {
                id: newOrderId,
                userId: currentUser.id,
                restaurantId,
                restaurantName,
                customer: {
                    name: `${form.lastName} ${form.firstName}`.trim(),
                    phone: form.phone,
                    email: form.email,
                    address: form.address
                },
                items: cart,
                total,
                status: "ƒêang x·ª≠ l√Ω",
                date: new Date().toLocaleString(),
                droneId: drone.id = 1
            };

            // G·ª≠i ƒë∆°n l√™n server
            await fetch("http://localhost:5002/orders", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(newOrder)
            });

            // ƒê·∫£m b·∫£o d·ªØ li·ªáu ƒë√£ l∆∞u tr∆∞·ªõc khi navigate
            setCart([]);
            localStorage.removeItem(`cart_${currentUser.username}`);
            navigate(`/waiting/${newOrder.id}`);
            alert(`‚úÖ ƒê·∫∑t ƒë∆°n h√†ng th√†nh c√¥ng!\nNh√† h√†ng: ${restaurantName}`);
        } catch (error) {
            console.error("‚ùå L·ªói khi l∆∞u order:", error);
            alert("C√≥ l·ªói x·∫£y ra khi ƒë·∫∑t h√†ng, vui l√≤ng th·ª≠ l·∫°i!");
        }
    };

    const handleSubmit = (e) => {
        e.preventDefault();
        handleCheckout();
    };

    return (
        <div className="checkout-page">
            <div className="checkout-header">
                <Link to="/cart">
                    <button className="back-btn">‚¨Ö Quay l·∫°i gi·ªè h√†ng</button>
                </Link>
                <h2>üîí TH√îNG TIN ƒê·∫∂T H√ÄNG</h2>
            </div>

            <div className="checkout-container">
                {/* --- C·ªôt tr√°i --- */}
                <div className="checkout-info">
                    <div className="info-block">
                        <h3>ƒê∆Ø·ª¢C GIAO T·ª™:</h3>
                        <p className="store-name">{restaurantName}</p>
                        <p className="store-address">123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM</p>
                    </div>

                    <div className="info-block">
                        <h3>GIAO ƒê·∫æN:</h3>
                        <input
                            type="text"
                            name="address"
                            value={form.address}
                            onChange={handleChange}
                            placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ giao h√†ng..."
                            className="address-input"
                        />
                        <iframe
                            title="map"
                            src={`https://maps.google.com/maps?q=${encodeURIComponent(form.address)}&z=15&output=embed`}
                            width="100%"
                            height="300"
                            style={{ border: 0, margin: "20px 0px", borderRadius: "10px" }}
                        ></iframe>
                    </div>

                    <div className="info-block">
                        <h2>TH√îNG TIN KH√ÅCH H√ÄNG:</h2>
                        <form onSubmit={handleSubmit}>
                            <div>
                                <label>H·ªç</label>
                                <input type="text" name="lastName" value={form.lastName} onChange={handleChange} />
                            </div>
                            <div>
                                <label>T√™n</label>
                                <input type="text" name="firstName" value={form.firstName} onChange={handleChange} required />
                            </div>
                            <div>
                                <label>S·ªë ƒëi·ªán tho·∫°i</label>
                                <input type="tel" name="phone" value={form.phone} onChange={handleChange} required />
                            </div>
                            <div>
                                <label>Email</label>
                                <input type="email" name="email" value={form.email} onChange={handleChange} required />
                            </div>

                            <div className="payment-section">
                                <h2>PH∆Ø∆†NG TH·ª®C THANH TO√ÅN:</h2>
                                <label>
                                    <input type="radio" name="payment" value="cod" defaultChecked /> Thanh to√°n khi nh·∫≠n h√†ng (COD)
                                </label>
                                <label>
                                    <input type="radio" name="payment" value="bank" /> Chuy·ªÉn kho·∫£n ng√¢n h√†ng
                                </label>
                                <button type="submit" className="btn-primary">
                                    X√°c nh·∫≠n ƒë·∫∑t h√†ng
                                </button>
                            </div>
                        </form>
                    </div>
                </div>

                {/* --- C·ªôt ph·∫£i --- */}
                <aside className="checkout-summary">
                    <div className="summary-card">
                        <h3>T√ìM T·∫ÆT ƒê∆†N H√ÄNG:</h3>
                        <ul>
                            {cart.map((item) => (
                                <li key={item.id}>
                                    <span>{item.quantity} x {item.name}</span>
                                    <span>{(item.price * item.quantity).toLocaleString()}‚Ç´</span>
                                </li>
                            ))}
                        </ul>
                        <div className="line">
                            <span>T·ªïng ƒë∆°n h√†ng</span>
                            <strong>{total.toLocaleString()}‚Ç´</strong>
                        </div>
                        <div className="line total">
                            <span>T·ªïng thanh to√°n</span>
                            <strong>{total.toLocaleString()}‚Ç´</strong>
                        </div>
                    </div>
                </aside>
            </div>
        </div>
    );
}
