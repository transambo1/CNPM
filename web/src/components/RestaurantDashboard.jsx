// src/components/RestaurantDashboard.jsx
import React, { useEffect, useState } from "react";
import "./RestaurantDashboard.css";

export default function RestaurantDashboard() {
    const [orders, setOrders] = useState([]);
    const [loading, setLoading] = useState(true);

    useEffect(() => {
        const fetchOrders = async () => {
            try {
                const res = await fetch("http://localhost:5002/orders");
                const data = await res.json();
                setOrders(data);
            } catch (err) {
                console.error("‚ùå L·ªói l·∫•y ƒë∆°n:", err);
            } finally {
                setLoading(false);
            }
        };

        fetchOrders();
        const interval = setInterval(fetchOrders, 5000);
        return () => clearInterval(interval);
    }, []);

    const handleConfirm = async (orderId) => {
        try {
            const res = await fetch(`http://localhost:5002/orders/${orderId}`);
            const order = await res.json();
            const updatedOrder = {
                ...order,
                status: "ƒêang giao b·∫±ng drone",
                droneId: Math.floor(Math.random() * 1000) + 1,
            };

            await fetch(`http://localhost:5002/orders/${orderId}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(updatedOrder),
            });

            setOrders((prev) =>
                prev.map((o) => (o.id === orderId ? updatedOrder : o))
            );

            alert(`‚úÖ ƒê∆°n h√†ng #${orderId} ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n!`);
        } catch (err) {
            console.error("‚ùå L·ªói x√°c nh·∫≠n ƒë∆°n:", err);
            alert("Kh√¥ng th·ªÉ x√°c nh·∫≠n ƒë∆°n, th·ª≠ l·∫°i!");
        }
    };

    if (loading)
        return <p className="rdash-loading">‚è≥ ƒêang t·∫£i ƒë∆°n h√†ng...</p>;

    return (
        <div className="rdash-container">
            <h2 className="rdash-title">üè† Qu·∫£n l√Ω ƒë∆°n h√†ng</h2>

            {orders.length === 0 ? (
                <p className="rdash-empty">Ch∆∞a c√≥ ƒë∆°n h√†ng n√†o.</p>
            ) : (
                <div className="rdash-table-wrapper">
                    <table className="rdash-table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Nh√† h√†ng</th>
                                <th>Kh√°ch h√†ng</th>
                                <th>ƒê·ªãa ch·ªâ</th>
                                <th>T·ªïng ti·ªÅn</th>
                                <th>Tr·∫°ng th√°i</th>
                                <th>H√†nh ƒë·ªông</th>
                            </tr>
                        </thead>
                        <tbody>
                            {orders.map((order) => (
                                <tr key={order.id}>
                                    <td>#{order.id}</td>
                                    <td>{order.restaurantName}</td>
                                    <td>{order.customer.name}</td>
                                    <td>{order.customer.address}</td>
                                    <td>{order.total.toLocaleString()}‚Ç´</td>
                                    <td>
                                        <span
                                            className={`rdash-status ${order.status === "ƒêang x·ª≠ l√Ω"
                                                    ? "pending"
                                                    : "done"
                                                }`}
                                        >
                                            {order.status}
                                        </span>
                                    </td>
                                    <td>
                                        {order.status === "ƒêang x·ª≠ l√Ω" ? (
                                            <button
                                                className="rdash-btn-confirm"
                                                onClick={() =>
                                                    handleConfirm(order.id)
                                                }
                                            >
                                                ‚úÖ X√°c nh·∫≠n
                                            </button>
                                        ) : (
                                            <span className="rdash-done">
                                                ‚úÖ ƒê√£ x·ª≠ l√Ω
                                            </span>
                                        )}
                                    </td>
                                </tr>
                            ))}
                        </tbody>
                    </table>
                </div>
            )}
        </div>
    );
}
